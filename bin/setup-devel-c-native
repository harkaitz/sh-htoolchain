#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 ...
#h:
#h: Install and maintain a C/C++ toolchain for the native platform.
#h:
#h: ... local-enable  : Enable `/usr/local` for compiling.
#h: ... local-disable : Disable `/usr/local` for compiling.
#h: ... install       : Install native compilation tools.
#h: ... versions      : Show native compilation tool versions.
##:
. vrun
. hpkg
. hlog
. hmain
. hfile
. hterm
setup_devel_c_native() {
    local cmd="$1"
    shift
    case "${cmd}" in
        local-enable)  setup_devel_c_native_local_enable  ;;
        local-disable) setup_devel_c_native_local_disable ;;
        install)       setup_devel_c_native_install       ;;
        versions)      setup_devel_c_native_calc_versions
                       setup_devel_c_native_show_versions ;;
        *)             hlog error "Invalid argument: ${cmd}."
                       return 1;;
    esac
}
## -----------------------------------------------------------------------------
setup_devel_c_native_local_enable() {
    for n in lib include; do
        if test ! -d "/usr/local/${n}.d"; then
            true
        elif test -d "/usr/local/${n}"; then
            hlog error "Directory /usr/local/${n} already exists."
            return 1
        else
            vrun sudo mv "/usr/local/${n}.d" "/usr/local/${n}"
        fi
            
    done
}
setup_devel_c_native_local_disable() {
    for n in lib include; do
        if test -d "/usr/local/${n}.d"; then
            true
        elif test -d "/usr/local/${n}"; then
            vrun sudo mv "/usr/local/${n}" "/usr/local/${n}.d"
        fi
    done
}
## -----------------------------------------------------------------------------
setup_devel_c_native_install() {
    ## Basic build tools.
    hlog info "Installing GNU/Make ..."
    hpkg -vi -w "make" -w "bmake" -w "pkg-config" \
         %dpkg "make" "bmake" "pkg-config"     \
         %xbps "make" "bmake" "pkg-config"
    ## Binutils and assembler.
    hlog info "Installing Binutils,Nasm ..."
    hpkg -vi -w "ld" -w "nasm" \
         %dpkg "binutils" "nasm" \
         %xbps "binutils" "nasm"
    ## GCC Compiler set.
    hlog info "Installing GNU GCC C/C++ compiler ..."
    hpkg -vi -w "gcc" -w "g++" -w "gdb" \
         %dpkg "gcc" "g++" "gcc-8" "g++-8" \
         %xbps "gcc" `: Includes g++` "gdb"
    ## LLVM Compiler set.
    hlog info "Installing GNU/LLVM C/C++ compiler ..."
    hpkg -vi -w "clang" \
         %dpkg "clang"  \
         %xbps "clang"
    ## Build tools.
    hlog info "Installing Autotools,CMake,Ninja,meson ..."
    hpkg -vi \
         -w "cmake"    -w "ninja"    -w "meson"                   \
         -w "autoconf" -w "automake" -w "libtoolize" -w "libtool" \
         %dpkg                                                    \
         "cmake"    "ninja"    "meson"                            \
         "autoconf" "automake" "libtool" "libtool-bin"            \
         %xbps                                                    \
         "cmake"    "ninja"    "meson"                            \
         "autoconf" "automake" "libtool" "libtool-bin"
    ## Lexers
    hlog info "Installing Bison and Flex ..."
    hpkg -vi -w "bison" -w "flex" \
         %dpkg "bison" "flex"     \
         %xbps "bison" "flex"
    ## Documentation generators.
    hlog info "Installing xsltproc, xmlto, makeinfo ..."
    hpkg -vi -w "xsltproc" -w "makeinfo" -w "xmlto" \
         %dpkg "xsltproc"                  \
         %xbps "libxslt" "texinfo" "xmlto"
    hlog info "Installing ttyrec and seq2gif ..."
    hpkg -vi -w "ttyrec" -w "seq2gif" \
         %xbps "ttyrec" "seq2gif"
    ## Code generators.
    hlog info "Installing gperf, xgettext, autopoint, itstool ..."
    hpkg -vi -w "gperf" -w "xgettext" -w "autopoint" -w "itstool" \
         %xbps  "gperf" "gettext" "gettext-devel-tools" "itstool"
    ## Version control.
    hlog info "Installing patch ..."
    hpkg -vi -w "patch" \
         %xbps "patch"
    ## Create sandbox script.
    vrun sudo mkdir -p                     "/var/lib/gcc"
    vrun sudo chown -R "`whoami`:`whoami`" "/var/lib/gcc"
    hlog info "Creating /usr/bin/gcc-env"
    hfile wrapper sudo "/usr/bin/gcc-env" <<-EOF
	#!/bin/sh -e
	. hcross-env-c
	hcross_env_c          \\
	type=gnu              \\
	prefix="/var/lib/gcc" \\
	prefixes="/usr /var/lib/gcc"
	EOF
}
setup_devel_c_native_show_versions() {
    hterm vars                                                 \
          - `: Runtime`                                        \
          V_GLIBC       V_BASH      V_CHOWN       V_DIFF       \
          V_FIND        V_GAWK      V_PATCH       V_SED        \
          V_TAR         V_XZ        V_GREP        V_GZIP       \
          V_BZIP2       V_FILE      V_M4          V_BC         \
          - `: Compilers`                                      \
          V_BISON       V_GCC       V_GPP         V_CLANG      \
          V_CLANGPP     V_LD        V_NASM        V_MAKE       \
          V_BMAKE       V_CMAKE     V_NINJA       V_MESON      \
          V_MAKEINFO    V_TIC       V_PKG_CONFIG  V_AUTOPOINT  \
          V_GETTEXT                                            \
          -
}
setup_devel_c_native_calc_versions() {
    local uname_s="`uname -s`"
    if test @"${uname_s}" = @"Linux";then
        V_GLIBC="`                            \
            ldd $(which ${SHELL}) 2>/dev/null \
            | grep libc.so                    \
            | cut -d ' ' -f 3                 \
            | ${SHELL}                        \
            | head -n 1                       `"
    else
        V_GLIBC=""
    fi
    V_BASH="`       bash       --version 2>/dev/null | head -n1 | cut -d" " -f2-4`"
    V_CHOWN="`      chown      --version 2>/dev/null | head -n1  `"
    V_DIFF="`       diff       --version 2>/dev/null | head -n1  `"
    V_FIND="`       find       --version 2>/dev/null | head -n1  `"
    V_GAWK="`       gawk       --version 2>/dev/null | head -n1  `"
    V_PATCH="`      patch      --version 2>/dev/null | head -n1  `"
    V_SED="`        sed        --version 2>/dev/null | head -n1  `"
    V_TAR="`        tar        --version 2>/dev/null | head -n1  `"
    V_XZ="`         xz         --version 2>/dev/null | head -n1  `"
    V_GREP="`       grep       --version 2>/dev/null | head -n1  `"
    V_GZIP="`       gzip       --version 2>/dev/null | head -n1  `"
    V_BZIP2="`      bzip2      --version 2>/dev/null 2>&1 < /dev/null | head -n1 | cut -d" " -f1,6-`"
    V_FILE="`       file       --version 2>/dev/null | head -n1  `"
    V_M4="`         m4         --version 2>/dev/null | head -n1  `"
    V_BC="`         bc         --version 2>/dev/null | head -n1  `"
    V_BISON="`      bison      --version 2>/dev/null | head -n1  `"
    V_GCC="`        gcc        --version 2>/dev/null | head -n1  `"
    V_GPP="`        g++        --version 2>/dev/null | head -n1  `"
    V_CLANG="`      clang      --version 2>/dev/null | head -n1  `"
    V_CLANGPP="`    clang++    --version 2>/dev/null | head -n1  `"
    V_LD="`         ld         --version 2>/dev/null | head -n1  `"
    V_NASM="`       nasm       --version 2>/dev/null | head -n1  `"
    V_MAKE="`       make       --version 2>/dev/null | head -n1  `"
    V_BMAKE="`      which bmake                                  `"
    V_CMAKE="`      cmake      --version 2>/dev/null | head -n1  `"
    V_NINJA="`      ninja      --version 2>/dev/null | head -n1  `"
    V_MESON="`      meson      --version                         `"
    V_MAKEINFO="`   makeinfo   --version 2>/dev/null | head -n1  `"
    V_TIC="`        tic -V               2>/dev/null             `"
    V_PKG_CONFIG="` pkg-config --version 2>/dev/null             `"
    V_AUTOPOINT="`  autopoint  --version 2>/dev/null | head -n1  `"
    V_GETTEXT="`    gettext    --version 2>/dev/null | head -n1  `"
}


## -----------------------------------------------------------------------------
hmain -f "setup-devel-c-native" setup_devel_c_native "$@"
