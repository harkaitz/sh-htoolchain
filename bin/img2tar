#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 [-o TARFILE][-n PARTITION] DISK
#h:
#h: From an image "DISK" get partition "PARTITION" and create
#h: a tar file.
#h:
#h: Requires: mount/umount/losetup/tar/fdisk/tar
##:
img2tar() {
    ## Parse command line options.
    local OPTIND optopt= output= partition=
    local loop=/dev/loop5 directory=/mnt/loop5 pwd="`pwd`"
    while getopts "o:n:" optopt;do # OPTARG
        local ops="${ops}${optopt}"
        case $optopt in
            o)  local output="${OPTARG}"    ;;
            n)  local partition="${OPTARG}" ;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    local disk="$1"
    ## No disk, escape.
    if test ! -n "${disk}";then
        return 0
    fi
    ## List partitions.
    if test ! -n "${partition}";then
        img2tar_list_partitions "${disk}"
        return 0
    fi
    if test ! -n "${output}";then
        img2tar_get_shift "${disk}" "${partition}"
        return 0
    fi
    ## Check you are root.
    if test ! @"`whoami`" = @"root";then
        echo "img2tar: You must run this as root." >&2
        return 0
    fi
    ## Get shift.
    local shift="`img2tar_get_shift "${disk}" "${partition}"`"
    local shift=$(($shift * 512))
    ## Create tar.
    img2tar_vrun umount "${loop}"|| true
    img2tar_vrun losetup -d "${loop}" || true
    img2tar_vrun losetup -o "${shift}" "${loop}" "${disk}"
    img2tar_vrun mkdir -p "${directory}"
    img2tar_vrun mount "${loop}" "${directory}"
    img2tar_vrun tar cf "${output}" -C "${directory}" .
    img2tar_vrun umount "${loop}"     || true
    img2tar_vrun losetup -d "${loop}" || true
}
img2tar_list_partitions() {
    local disk="$1"
    LANG=C fdisk -l "${disk}" | sed '1,/^ *Device /d'
}
img2tar_get_shift() {
    local disk="$1" partition="$2"
    img2tar_list_partitions "${disk}" | awk -v n="${partition}" 'NR == n {print $2}'
}
img2tar_vrun() {
    echo "$*" >&2
    "$@"
}





if test @"`basename "$0"`" = @"img2tar";then
    if test -n "$1";then
        img2tar "$@"
    else
        sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|`basename $0`|g"
        echo ""
        sed -n 's/^ *#l: \{0,2\}//p' "$0"
    fi
fi
