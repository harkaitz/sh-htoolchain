#!/bin/sh -e
##:
#h: Usage: hautotools ...
#h:
#h: A wrapper around GNU Autotools projects.
#h:
#h: ... show              : Show configuration.
#h: ... autogen           : Execute './autogen.sh' if it exists, otherwise 'autoreconf -fi'.
#h: ... all CARGS...      : clean, configure, make, make install.
#h: ... clean             : Execute `make clean`.
#h: ... configure ARGS... : Execute the `./configure ...` step.
#h: ... make              : Execute `make ...`.
#h: ... install           : Execute `make install ...`.
##:
hautotools() {
    local cmd="$1"
    shift
    case "${cmd}" in
        show)          hautotools_show_variables ;;
        autogen)       hautotools_autogen        ;;
        clean)         hautotools_clean          ;;
        configure|run) hautotools_run     "$@"   ;;
        make)          hautotools_make    "$@"   ;;
        install)       hautotools_install "$@"   ;;
        all)           hautotools_clean
                       hautotools_run "$@"
                       hautotools_make
                       hautotools_install;;
        *)             hautotools_log "error: Invalid subcommand: ${cmd}" >&2
                       return 1;;
    esac
}
## -------------------------------------------------------------------
hautotools_show_variables() {
    cat <<-EOF
	HBUILD_PREFIX  : $HBUILD_PREFIX
	HBUILD_DESTDIR : $HBUILD_DESTDIR
	HBUILD_SUDO    : $HBUILD_SUDO
	
	MAKE             : $MAKE
	CONFIGURE        : $CONFIGURE
	CONFIGURE_HOST   : $CONFIGURE_HOST
	CONFIGURE_FLAGS  : $CONFIGURE_FLAGS
	
	CC  : $CC
	CXX : $CXX
	AR  : $AR
	LD  : $LD
	
	CFLAGS : $CFLAGS
	CXXFLAGS : $CXXFLAGS
	CPPFLAGS : $CPPFLAGS
	LDFLAGS : $LDFLAGS
	EOF
}
hautotools_autogen() {
    if test -f "autogen.sh";then
        hautotools_vrun sh -e "autogen.sh"
    elif test -f configure.ac;then
        hautotools_vrun autoreconf -fi
    elif test -f configure;then
        true
    else
        hautotools_log "Do not know how to create ./configure."
        return 1
    fi
}
hautotools_run() {
    local flags="" has_prefix= has_host= arg=
    for arg in "$@";do
        case "${arg}" in
            --prefix=*) local has_prefix=y ;;
            --host=*)   local has_host=y   ;;
        esac
    done
    if test ! -n "${has_prefix}";then
        local flags="${flags} --prefix=${HBUILD_PREFIX:-/usr/local}"
    fi
    if test ! -n "${has_host}" && test -n "${CONFIGURE_HOST}";then
        local flags="${flags} --host=${CONFIGURE_HOST}"
    fi
    local ldflags="`printf '%s\n' "${LDFLAGS}" | sed '
    s|-Wl,-rpath,|-rpath |g
    '`" # Libtool needs this.
    hautotools_vrun                                          \
        env                                                  \
        CC="${CC:-gcc} ${CFLAGS} ${CPPFLAGS} ${LDFLAGS}"     \
        CXX="${CXX:-g++} ${CXXFLAGS} ${CPPFLAGS} ${LDFLAGS}" \
        AR="${AR:-ar}"                                       \
        LD="${LD:-ld} ${ldflags}"                            \
        CFLAGS="" CXXFLAGS="" CPPFLAGS="" LDFLAGS=""         \
        "${CONFIGURE:-./configure}"                          \
        ${flags}                                             \
        ${CONFIGURE_FLAGS}                                   \
        "$@"
}
hautotools_clean() {
    hautotools_log "${MAKE:-make} distclean"
    env ${MAKE:-make} distclean >/dev/null 2>&1 || true
}
hautotools_make() {
    hautotools_vrun env ${MAKE:-make}  V=1 "$@"
}
hautotools_install() {
    hautotools_vrun                     \
        ${HBUILD_SUDO:-sudo}            \
        ${MAKE:-make}                   \
        ${MAKE_INSTALL_TARGET:-install} \
        V=1                             \
        DESTDIR="${HBUILD_DESTDIR}"     \
        "$@"
}
hautotools_log()  { echo "${SCRNAME}: $*" >&2; }
hautotools_vrun() { hautotools_log "$*"; "$@"; }
## -------------------------------------------------------------------
if test ! -n "${HBUILD_PREFIX}"; then
    HBUILD_PREFIX=/usr/local
    HBUILD_SUDO=sudo
fi
if test @"$(basename "$0")" = @"hautotools";then
    case "${1}" in
        ''|-h|--help) sed -n 's/^ *#h: \{0,1\}//p' "$0" ;;
        *)            hautotools "$@"; exit 0 ;;
    esac
fi
# LIBTOOL="libtool${LIBTOOL_TAG:+ --tag=${LIBTOOL_TAG}} -W error"
