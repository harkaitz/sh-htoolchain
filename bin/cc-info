#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2023 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: CC=gcc CFLAGS=-std=c99 $0 [-d]
#h:
#h: Get information from a gcc compiler.
#h:
#h:     -d                   : List default defines.
#h:     -c MACRO=VALUE ...   : Print the first defined.     (CC,CFLAGS)
#h:     -t MACRO ...         : Check whether it is defined. (CC,CFLAGS)
#h:     -s @H1 @H2 @c++ TYPE : Get the size of a type. (CC,CXX,CFLAGS,CXXFLAGS)
##:
cc_info() {
    local OPTIND optopt op='' n=''
    while getopts "dcts" optopt; do
        case $optopt in
            d|c|t|s) op="$optopt" ;;
            \?)    return 1     ;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    case "${op}" in
        d) cc_info_list_defines      ;;
        c) cc_info_print_first  "$@" ;;
        t) test -n "`cc_info_find_first "$@" || true`";;
        s) cc_info_print_size   "$@" ;;
    esac
}
cc_info_list_defines() {
    ${CC:-gcc} ${CFLAGS} -dM -E - < /dev/null
}
cc_info_print_first() {
    for n in "$@"; do
        n1="`echo "$n" | sed 's|=.*||'     `"
        n2="`echo "$n" | sed 's|^[^=]*=||' `"
        echo "#ifdef $n1"
        echo "\"$n2\""
        echo "#endif"
    done | ${CC:-gcc} ${CFLAGS} -E - | sed '/^\#/d;/^ *$/d;s|"||g' | head -n 1
}
cc_info_find_first() {
    for n in "$@"; do
        n1="`echo "$n" | sed 's|=.*||'     `"
        echo "#ifdef $n1"
        echo "\"$n1\""
        echo "#endif"
    done | ${CC:-gcc} ${CFLAGS} -E - | sed '/^\#/d;/^ *$/d;s|"||g' | head -n 1
}
cc_info_print_size() {
    local x="`mktemp`" lang=c
    while test -n "$1"; do
        if test @"${1}" = @"@c++"; then
            local lang=c++
            shift
            continue
        fi
        local h="`echo "${1}" | sed -n 's|@||p'`"
        if test -n "${h}"; then
            if test -e "${h}"; then
                echo "#include \"`pwd`/${h}\"" >> "${x}.c"
            else
                echo "#include <${h}>" >> "${x}.c"
            fi
            shift
            continue
        fi
        cat <<-EOF >> "${x}.c"
	#include <stdio.h>
	int main(int _argc, char *_argv[]) {
	    printf("%-4s %li Bytes %li Bits\n", _argv[1], sizeof($*), sizeof($*)*8);
	    return 0;
	}
	EOF
        break
    done
    case "${lang}" in
        c)   ${CC:-gcc} ${CFLAGS} -o "${x}" -x c   "${x}.c"
             "${x}" "c"
             ;;
        c++)
             ${CC:-g++} ${CXXFLAGS} -o "${x}" -x c++ "${x}.c"
             "${x}" "c++"
             ;;
    esac
}



## -------------------------------------------------------------------
SCRNAME="`basename "$0"`"
if test @"${SCRNAME}" = @"cc-info";then
    case "${1}" in
        ''|-h|--help)
            sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|${SCRNAME}|g"
            echo ""
            sed -n 's/^ *#l: \{0,2\}//p' "$0"
            ;;
        *)
            cc_info "$@"
            ;;
    esac
fi
