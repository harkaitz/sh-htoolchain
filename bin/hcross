#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#h: Usage: $0 [OPTS...] list|show|CMD...
#h:
#h: Execute command or function with a toolchain.
#h:
#h: -t TOOLCHAIN : Load toolchain.
#h: -p PREFIX    : Use this prefix.
#h: -d DESTDIR   : Use this destination directory.
#h: -w           : Run command by `build_{CMD}`
hcross() {
    local old_env="`export -p`"
    local old_vars="${HBUILD_VARS}" var=
    local toolchain="${HBUILD_TOOLCHAIN}"
    HBUILD_VARS= HBUILD_TOOLCHAIN=
    ## Parse command line options.
    local OPTIND optopt= ops= wrap=
    while getopts "t:p:d:w" optopt;do # OPTARG
        case $optopt in
            t)  local toolchain="${OPTARG}" ;;
            p)  export HBUILD_PREFIX="${OPTARG}"    ;;
            d)  export HBUILD_DESTDIR="${OPTARG}"   ;;
            w)  local wrap=y;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    ## Search and set environment.
    if test -n "${toolchain}";then
        local script="`which "${toolchain}-env" 2>/dev/null`"
        if test ! -n "${script}";then
            echo "${SCRNAME}: error: Can't find '${toolchain}-env' in path." >&2
            return 1
        fi
        . "${script}"
        if test ! -n "${HBUILD_TOOLCHAIN}";then
            echo "${SCRNAME}: error: The script didn't set HBUILD_TOOLCHAIN." >&2
            return 1
        fi
        if test ! -n "${HBUILD_PREFIX}";then
            echo "${SCRNAME}: error: The script didn't set HBUILD_PREFIX." >&2
            return 1
        fi
    fi
    
    
    ## Execute in the changed environment.
    case "${1}" in
        ''|show) for var in ${HBUILD_VARS};do
                     eval 'printf "%-20s : %s\\n" "${var}" "${'"${var}"'}"'
                 done;;
        *)
            if test -n "${wrap}";then
                local cmd="build_${1}"; shift
                "${cmd}" "$@"
            else
                "$@"
            fi;;
    esac
    ## Restore environment
    unset HBUILD_PREFIX HBUILD_DESTDIR HBUILD_TOOLCHAIN ${HBUILD_VARS}
    HBUILD_VARS="${old_vars}"
    eval "${old_env}"
}
## -----------------------------------------------------------------------------
SCRNAME="`basename "$0"`"
if test @"${SCRNAME}" = @"hcross";then
    case "${1}" in
        ''|-h|--help)
            sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|${SCRNAME}|g"
            echo ""
            sed -n 's/^ *#l: \{0,2\}//p' "$0"
            ;;
        *)
            hcross "$@"
            ;;
    esac
fi
