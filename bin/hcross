#!/bin/sh -e
#L:
#L:  MIT License
#L:  
#l:  Bug reports, feature requests to gemini|https://harkadev.com/oss
#l:  Copyright (c) 2022 Harkaitz Agirre, harkaitz.aguirre@gmail.com
#L:
#L:  Permission is hereby granted, free of charge, to any person obtaining
#L:  a copy of this software and associated documentation files (the
#L:  "Software"), to deal in the Software without restriction, including
#L:  without limitation the rights to use, copy, modify, merge, publish,
#L:  distribute, sublicense, and/or sell copies of the Software, and to
#L:  permit persons to whom the Software is furnished to do so, subject to
#L:  the following conditions:
#L:
#L:  The above copyright notice and this permission notice shall be
#L:  included in all copies or substantial portions of the Software.
#L:
#L:  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
#L:  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
#L:  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
#L:  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
#L:  LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
#L:  OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
#L:  WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
##:
#h: Usage: $0 [OPTS...] [CMD...]
#h:        $0 -w [COLLECTION]
#h:
#h: Execute command or function with a toolchain.
#h:
#h: -t l|TOOLCHAIN : Load toolchain.
#h: -v             : Show variables.
#h: -o VAR=VAL     : Set variable.
#h:
#h: -p PREFIX    : Use this prefix.
#h: -d DESTDIR   : Use this destination directory.
#h: -D           : When native install dependencies.
#h: -S           : Try to build static libraries/executables.
#h: -R           : Use sudo when installing.
#h:
#h: -w           : Run command by `build_{CMD}`
#h: -b           : Bootstrap to the prefix.
hcross() {
    local old_env="`export -p`"
    local old_vars="${HBUILD_VARS}" var= line=
    local toolchain="${HBUILD_TOOLCHAIN_DEFAULT:-native}"
    HBUILD_VARS= HBUILD_TOOLCHAIN=
    ## Parse command line options.
    local OPTIND optopt= ops= wrap= view= bootstrap=
    while getopts "t:p:d:DwvSRbo:" optopt; do # OPTARG
        case $optopt in
            t)  local toolchain="${OPTARG}"       ;;
            p)  export HBUILD_PREFIX="${OPTARG}"  ;;
            d)  export HBUILD_DESTDIR="${OPTARG}" ;;
            D)  export HBUILD_IDEPS="y"           ;;
            S)  export HBUILD_PREFER_STATIC="y"   ;;
            R)  export HBUILD_SUDO="sudo"         ;;
            w)  local wrap=y;;
            v)  local view=y;;
            b)  local bootstrap=y;;
            o)  local ovar="`echo "${OPTARG}" | sed    's|=.*||'      `"
                local oval="`echo "${OPTARG}" | sed -n 's|^[^=]*=||p' `"
                export "${ovar}=${oval}"
                HBUILD_VARS="${HBUILD_VARS} ${ovar}"
                ;;
            \?) return 1;;
        esac
    done
    shift $(( $OPTIND - 1 ))
    ## Search and set environment.
    if test @"${toolchain}" = @"native"; then
        export HBUILD_TOOLCHAIN=native
        export HBUILD_PREFIX="${HBUILD_PREFIX:-/usr/local}"
        if test   -e "${HBUILD_DESTDIR}${HBUILD_PREFIX}" && \
           test ! -w "${HBUILD_DESTDIR}${HBUILD_PREFIX}"; then
            export HBUILD_SUDO="${HBUILD_SUDO:-sudo}"
        else
            export HBUILD_SUDO="${HBUILD_SUDO:-env}"
        fi
    elif test @"${toolchain}" = @"l"; then
        hcross_list_programs | sed -n 's|-env$||p' | sort | uniq
        return 1
    elif test -n "${toolchain}"; then
        export HBUILD_TOOCHAIN="${toolchain}"
        local script="`which "${toolchain}-env" 2>/dev/null`"
        if test ! -n "${script}"; then
            hcross_error "Can't find '${toolchain}-env' in path."
            return 1
        fi
        . "${script}"
        if test ! -n "${HBUILD_TOOLCHAIN}"; then
            hcross_error "The script didn't set HBUILD_TOOLCHAIN."
            return 1
        fi
        if test ! -n "${HBUILD_PREFIX}"; then
            hcross_error "The script didn't set HBUILD_PREFIX."
            return 1
        fi
    fi
    local vars="
    HBUILD_PREFIX HBUILD_DESTDIR HBUILD_TOOLCHAIN HBUILD_SUDO HBUILD_IDEPS HBUILD_PREFER_STATIC
    ${HBUILD_VARS}
    "
    ## Bootstrap.
    if test -n "${bootstrap}"; then
        export PATH="${HBUILD_DESTDIR}${HBUILD_PREFIX}/bin:${HBUILD_DESTDIR}${HBUILD_PREFIX}/sbin:${PATH}"
    fi
    ## Print variables.
    if test @"${view}" = @"y"; then
        for var in ${vars}; do
            eval 'printf "%-20s : %s\\n" "${var}" "${'"${var}"'}"'
        done
        return 0
    fi
    ## Execute in the changed environment.
    if test ! -n "${wrap}"; then
        ( set -e; "$@" )
    elif test -n "${1}"; then
        local cmd="build_`echo "${1}" | tr '-' '_' | tr '/' '_'`"; shift
        ( set -e; "${cmd}" "$@" )
    else
        hcross_list_programs | sed -n 's|^build_||p'
    fi
    ## Restore environment
    unset ${vars}
    HBUILD_VARS="${old_vars}"
    eval "${old_env}"
}
## -----------------------------------------------------------------------------
hcross_error() {
    echo "${SCRNAME}: error: $*" >&2
    return 1
}
hcross_list_programs() {
    printf '%s\n' "${PATH}" | tr ':' '\n' | while read line; do
        if test -d "${line}"; then
            ls "${line}"
        fi
    done
}



## -----------------------------------------------------------------------------
SCRNAME="`basename "$0"`"
if test @"${SCRNAME}" = @"hcross";then
    case "${1}" in
        ''|-h|--help)
            sed -n 's/^ *#h: \{0,1\}//p' "$0" | sed "s|\\\$0|${SCRNAME}|g"
            echo ""
            sed -n 's/^ *#l: \{0,2\}//p' "$0"
            ;;
        *)
            hcross "$@"
            ;;
    esac
fi
